name: Check chart version bump
on:
  pull_request:
jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: list_modified_chart_folders
        name: List modified chart folders
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Retrive the list of modifed chart folders from the pull request changes
          gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[].path' | grep "^charts/" | xargs dirname | cut -d "/" -f 2 | sort --unique > modified_chart_folders.txt
          
          # Store the modified folders as a step output
          # echo "modified_chart_folders=$(cat modified_chart_folders.txt)" >> $GITHUB_OUTPUT
          {
            echo 'modified_chart_folders<<EOF'
            cat modified_chart_folders.txt
            echo EOF
          } >> "$GITHUB_ENV"
      - id: check-bump
        name: Check if chart version has been bumped
        run: |
          echo "= GITHUB_BASE_REF"
          printf '%s\n' "$GITHUB_BASE_REF"
          echo "= GITHUB_REF"
          printf '%s\n' "$GITHUB_REF"
          echo "= GITHUB_HEAD_REF"
          printf '%s\n' "$GITHUB_HEAD_REF"
          echo "= after printf"
          # PR_BRANCH=${GITHUB_REF#refs/pull/${{ github.event.pull_request.number }}/merge}
          # MAIN_BRANCH=${GITHUB_REF#refs/heads/}

          for folder in $modified_chart_folders; do
            echo "== folder $folder"
            MAIN_CHART_VERSION=$(git show $GITHUB_HEAD_REF:charts/$folder/Chart.yaml | grep "^version:")
            PR_CHART_VERSION=$(git show origin:charts/$folder/Chart.yaml | grep "^version:")

            if [ "$MAIN_CHART_VERSION" == "$PR_CHART_VERSION" ]; then
              echo "ERROR: the version of the '${folder}' chart hasn't been bumped."
              exit 1
            fi

            echo "The version of the '${folder}' chart has been bumped."
          done
